<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips | Yuma Uchiumi</title>
    <link>https://yumaloop.github.io/tag/tips/</link>
      <atom:link href="https://yumaloop.github.io/tag/tips/index.xml" rel="self" type="application/rss+xml" />
    <description>Tips</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© Yuma Uchiumi 2018-2021</copyright><lastBuildDate>Sun, 20 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://yumaloop.github.io/media/static/media/icon.png</url>
      <title>Tips</title>
      <link>https://yumaloop.github.io/tag/tips/</link>
    </image>
    
    <item>
      <title>StackOverflow - 2020 Developer Survey</title>
      <link>https://yumaloop.github.io/post/2020-12-20-stackoverflow-developer-survey-2020/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://yumaloop.github.io/post/2020-12-20-stackoverflow-developer-survey-2020/</guid>
      <description>&lt;p&gt;StackOverflow published its &lt;strong&gt;Developer Survey 2020&lt;/strong&gt;. Click &lt;a href=&#34;https://insights.stackoverflow.com/survey/2020&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;In 2020,
&lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;Go&lt;/strong&gt;, &lt;strong&gt;TypeScript&lt;/strong&gt;, &lt;strong&gt;Rust&lt;/strong&gt; are the programming language most loved by developers in the world.
It means that these languages are in vogue and new learners are on the rise.
While &lt;strong&gt;JavaScript&lt;/strong&gt; swallows everything, &lt;strong&gt;Perl&lt;/strong&gt;, &lt;strong&gt;PHP&lt;/strong&gt;, and &lt;strong&gt;Ruby&lt;/strong&gt; seem to be still in high demand.&lt;/p&gt;
&lt;p&gt;Frameworks packaging frontends, backends and database into one, such as Rails, are already not preferred.
Today, dividing frontends with &lt;strong&gt;JavaScript&lt;/strong&gt; (&lt;strong&gt;Node.js&lt;/strong&gt;, &lt;strong&gt;Vue.js&lt;/strong&gt;, &lt;strong&gt;React.js&lt;/strong&gt;)
and backends/database with scalable cloud services (&lt;strong&gt;AWS&lt;/strong&gt;, &lt;strong&gt;GCP&lt;/strong&gt;)
is major approach for adaptive web applications.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;Java&lt;/strong&gt; have always been very popular
and in demand as general languages that can be used for many purposes.
In the future, it will be interesting to see if &lt;strong&gt;Go&lt;/strong&gt; and &lt;strong&gt;Rust&lt;/strong&gt; can take their place.&lt;/p&gt;
&lt;p&gt;Finally, I would like to introduce the cluster map of major development technologies found by the StackOverflow Developer Survey 2020.
With the penetration of new technologies such as &lt;strong&gt;mobile&lt;/strong&gt;, &lt;strong&gt;container&lt;/strong&gt; and &lt;strong&gt;cloud computing&lt;/strong&gt;,
it will be more difficult to become a full-stack engineer in the near future.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assembly, C, C++&lt;/li&gt;
&lt;li&gt;Raspberry Pi, Arduino&lt;/li&gt;
&lt;li&gt;Unity, UnrealEngine&lt;/li&gt;
&lt;li&gt;Hadoop, Scala, Apache Spark&lt;/li&gt;
&lt;li&gt;Python, Pandas, Torch/PyTorch&lt;/li&gt;
&lt;li&gt;Linux, Docker, Kubernetes, Bash/Shell&lt;/li&gt;
&lt;li&gt;AWS, Redis, Ansible, DynamoDB, PostgreSQL&lt;/li&gt;
&lt;li&gt;JavaScript, Node.js, React.js, Angular, TypeScript, MongoDB,&lt;/li&gt;
&lt;li&gt;PHP, MySQL, jQuery, WordPress&lt;/li&gt;
&lt;li&gt;Java, Swift, Android, iOS, Kotlin, SQLite, Firebase&lt;/li&gt;
&lt;li&gt;C#, .NET, Windows, Azure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;./so_ds_2020_cluster.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Monte Carlo Simulation of Black-Scholes Option Pricing Model</title>
      <link>https://yumaloop.github.io/post/2020-11-25-monte-carlo-sim-bsoption-r/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://yumaloop.github.io/post/2020-11-25-monte-carlo-sim-bsoption-r/</guid>
      <description>&lt;p&gt;幾何ブラウン運動のサンプルパスを生成することにより，株価が幾何ブラウン運動にしたがう場合のコールオプション価格をモンテカルロシミュレーションにより導出し，サンプルパスの生成回数を増やすことで理論値に収束することをプロットにより確認する．&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;1-コールオプションの価格理論&#34;&gt;1. コールオプションの価格理論&lt;/h2&gt;
&lt;h4 id=&#34;ブラックショールズ式によるオプション価格の導出&#34;&gt;ブラックショールズ式によるオプション価格の導出&lt;/h4&gt;
&lt;p&gt;満期$T$で原資産価格(株式価格)が連続時間確率過程$S = {(S_t)}_{t \in [0,T]}$に従うオプションの時刻$t \in [0, T]$における価格$C(t, S_t)$について考える．$S$が確率微分方程式:&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
d S_t = \sigma S_t dt + \mu S_t d W_t
\end{align}
$$&lt;/p&gt;
&lt;p&gt;の解で与えられているとする($S$は幾何ブラウン運動に従う)．時刻$t \in [0, T]$において，オプションの原資産価格$S_t$とオプションの行使価格$K$が与えられたとき，ブラック・ショールズ式によってオプションの理論価格$C(t, S_t)$は&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
C(t, S_t) &amp;amp;= S_t \Phi(d_1) - K e^{-r(T-t)} \Phi(d_2) \\&lt;br&gt;
where ~~
d_1 &amp;amp;= \frac{\log \left( \frac{S_t}{K} \right) + \left( r + \frac{\sigma^2}{2}  \right) T}{\sigma \sqrt{T}} \\&lt;br&gt;
d_2 &amp;amp;= \frac{\log \left( \frac{S_t}{K} \right) + \left( r - \frac{\sigma^2}{2}  \right) T}{\sigma \sqrt{T}}
\end{align}
$$&lt;/p&gt;
&lt;p&gt;となる．ただし，$r$は無リスク資産の利率，$\Phi$は標準正規分布$\mathcal{N}(0,1)の累積分布関数とする．ここで，簡単のために満期$T$を$1$とすると，現在($t=0$)のオプション価格の理論値は，&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
C(0, S_0) &amp;amp;= S_0 \Phi(d_1) - K e^{-r} \Phi(d_2) \\&lt;br&gt;
where ~~
d_1 &amp;amp;= \frac{\log \left( \frac{S_0}{K} \right) + \left( r + \frac{\sigma^2}{2}  \right)}{\sigma } \\&lt;br&gt;
d_2 &amp;amp;= \frac{\log \left( \frac{S_0}{K} \right) + \left( r - \frac{\sigma^2}{2}  \right)}{\sigma}
\end{align}
$$&lt;/p&gt;
&lt;p&gt;となる．&lt;/p&gt;
&lt;h4 id=&#34;モンテカルロ法によるオプション価格の導出&#34;&gt;モンテカルロ法によるオプション価格の導出&lt;/h4&gt;
&lt;p&gt;ブラックショールズ式に含まれる$S_T$の期待値計算をモンテカルロ法によって近似することを考える．すなわち，幾何ブラウン運動に従うサンプルパス$S = {(S_t)}_{t \in [0,T]}$を大量に生成することで，$S_T$の期待値を求める．&lt;/p&gt;
&lt;p&gt;モンテカルロシミュレーションによって生成された，満期$T$における原資産価格$S_T$の$n$個のサンプルを$(s^{(1)}&lt;em&gt;{T}, \cdots, s^{(n)}&lt;/em&gt;{T})$とすると，時刻$t \in [0, T]$におけるオプションの価格の推定値$\hat{C}(t, S_t)$は&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
\hat{C}(t, S_t) &amp;amp;= \frac{1}{n} \sum_{i=1}^{n} e^{-r(T-t)} \cdot max(s^{(i)}_{T} - K, 0)
\end{align}
$$&lt;/p&gt;
&lt;p&gt;と求められる．ここで，簡単のために満期$T$を$1$とすると，現在($t=0$)のオプション価格の推定値は，&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
\hat{C}(0, S_0) &amp;amp;= \frac{1}{n} \sum_{i=1}^{n} e^{-r} \cdot max(s^{(i)}_{1} - K, 0)
\end{align}
$$&lt;/p&gt;
&lt;p&gt;となる．&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;2-rでモンテカルロシミュレーション&#34;&gt;2. Rでモンテカルロシミュレーション&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://yuimaproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;YUIMA&lt;/a&gt;ライブラリをインストール（or 読み込み）する．&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;yuima&amp;quot;) # インストール (初回のみ)
library(yuima) # ライブラリの読み込み
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;モンテカルロシミュレーションを実行するコード．&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Calculation of call-option prices by Black-Sholes eq.
BlackScholesCallPrice = function(S, K, r, sigma, T=1)
{
    d1 &amp;lt;- ( log(S/K) + (r + sigma^2/2) * T)/( sigma * sqrt(T))
    d2 &amp;lt;- ( log(S/K) + (r - sigma^2/2) * T)/( sigma * sqrt(T))
    C0 &amp;lt;- S * pnorm(d1) - K * exp(-r * T) * pnorm(d2)
    return(C0)
}

# Calculation of call-option prices by Monte Carlo method
MonteCarloCallPrice = function(S, K, r, sigma, n, T=1)
{
    n_sample &amp;lt;- 1000
    c0_list &amp;lt;- list()
    c0 &amp;lt;- 0
    for (i in 1:n) {
        resultGBM &amp;lt;- GBM_sample(S, r, sigma, n_sample)
        sT &amp;lt;- resultGBM@data@original.data[n_sample]
        c0 &amp;lt;- (1/i) * exp(-1*r*T) * max(sT - K, 0) + ((i-1)/i) * c0
        c0_list &amp;lt;- append(c0_list, list(c0))
    }
    return(c0_list)
}

# A function which generates sample paths that follows a Geometric Brownian motion
GBM_sample = function(x0, alpha, beta, n_sample, T=1)
{
    # Step1: Define SDE
    # dS_t = alpha * S_t * dt + beta * S_t * dW_t
    mod &amp;lt;-setModel(drift=&amp;quot;alpha*x&amp;quot;, diffusion=&amp;quot;beta*x&amp;quot;)
    
    # Step2: Define samples
    samp &amp;lt;-setSampling(Initial=0, Terminal=T, n=n_sample)
    
    # Step3: define the statistical model
    smod &amp;lt;-setYuima(model=mod, sampling=samp)
    
    # Step4: Generate sample paths
    xinit &amp;lt;- x0
    param &amp;lt;- list(alpha=alpha, beta=beta)
    resultGBM &amp;lt;- simulate(smod, xinit=xinit, true.parameter=param)
    return(resultGBM)
}

# Params for call-option pricing
n &amp;lt;- 10000 # Num. of MonteCalro simulation
K &amp;lt;- 900 # Option exercise price (at t=T)
S &amp;lt;- 1000 # Curent asset price (at t=0)
r &amp;lt;- 0.005 # Drift for Geometric Brownian motion
sigma &amp;lt;- 0.3 # Diffusion for Geometric Brownian motion
T &amp;lt;- 1 # Optional term

# Main procedure: Run simulation
bs_price &amp;lt;- BlackScholesCallPrice(S, K, r, sigma, T=1)
mc_price &amp;lt;- MonteCarloCallPrice(S, K, r, sigma, n, T=1)
print(bs_price)
plot(1:n, mc_price, main=&amp;quot;Monte Carlo Simulation:\nBlack-Scholes Option Pricing Model&amp;quot;, xlab=&amp;quot;Number of sample paths: # of ST&amp;quot;, ylab=&amp;quot;Option Price: C0&amp;quot;, cex=0.5)
abline(h=bs_price, col=&#39;red&#39;, lwd=1, lty=2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Case 1.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./r_mcbs1.png&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt;
&lt;p&gt;モンテカルロ法によるコールオプションの推定価格が，
BS式による理論価格172.7457に漸近している．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パラメータ設定
&lt;ul&gt;
&lt;li&gt;n: 10000 # モンテカルロシミュレーションの回数&lt;/li&gt;
&lt;li&gt;K: 900 # コールオプションの権利行使価格 (t=T)&lt;/li&gt;
&lt;li&gt;S: 1000 # 株式の現在価格 (t=0)&lt;/li&gt;
&lt;li&gt;r: 0.005 # 幾何ブラウン運動のdrift&lt;/li&gt;
&lt;li&gt;sigma: 0.3 # 幾何ブラウン運動のdiffusion&lt;/li&gt;
&lt;li&gt;T: 1 # オプションの満期&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Case 2.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./r_mcbs2.png&#34; alt=&#34;img2&#34;&gt;&lt;/p&gt;
&lt;p&gt;モンテカルロ法によるコールオプションの推定価格が，
BS式による理論価格83.1821に漸近している．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パラメータ設定
&lt;ul&gt;
&lt;li&gt;n: 10000 # モンテカルロシミュレーションの回数&lt;/li&gt;
&lt;li&gt;K: 1100 # コールオプションの権利行使価格 (t=T)&lt;/li&gt;
&lt;li&gt;S: 1000 # 株式の現在価格 (t=0)&lt;/li&gt;
&lt;li&gt;r: 0.005 # 幾何ブラウン運動のdrift&lt;/li&gt;
&lt;li&gt;sigma: 0.3 # 幾何ブラウン運動のdiffusion&lt;/li&gt;
&lt;li&gt;T: 1 # オプションの満期&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Simon N Wood&#39;s &#34;lockdown reading list&#34;</title>
      <link>https://yumaloop.github.io/post/2020-06-30-sw-lockdown-reading-list/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://yumaloop.github.io/post/2020-06-30-sw-lockdown-reading-list/</guid>
      <description>&lt;div class=&#39;pixels-photo&#39;&gt;
&lt;a href=&#39;https://500px.com/photo/1023232933/Used-medical-mask-on-the-asphalted-road-Polution-concept--by-Arthur-Lomarainen&#39; alt=&#39;Used medical mask on the asphalted road. Polution concept.  by Arthur Lomarainen on 500px.com&#39;&gt;
  &lt;img src=&#39;https://drscdn.500px.org/photo/1023232933/m%3D900/v2?sig=6fa163cdf4de9e796f0c78bb8608f2cace0ba8849195c687d7b1dbb88177f50c&#39; alt=&#39;Used medical mask on the asphalted road. Polution concept.  by Arthur Lomarainen on 500px.com&#39; /&gt;
  &lt;/a&gt;
  &lt;/div&gt;
  &lt;script type=&#39;text/javascript&#39; src=&#39;https://500px.com/embed.js&#39;&gt;&lt;/script&gt;
&lt;p&gt;&lt;a href=&#34;https://scholar.google.co.uk/citations?user=EskiIyEAAAAJ&amp;amp;hl=en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simon Wood&lt;/a&gt;, a leading statistician in UK being famous for the text book of the GAMs introduced the lockdown reading list in his &lt;a href=&#34;https://people.maths.bris.ac.uk/~sw15190/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;homepage&lt;/a&gt;. It looks interesting, so I&amp;rsquo;ll share it here. (most of them are &lt;a href=&#34;https://blackwells.co.uk/bookshop/home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blackwell&amp;rsquo;s, books&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blackwells.co.uk/bookshop/product/Collapse-by-Jared-M-Diamond/9780241958681&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Collapse&lt;/a&gt; (Jared Diamond) on how societies are destroyed, not by external forces, but by their failure to adapt their cultural norms to those forces.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blackwells.co.uk/bookshop/product/Thinking-Fast-and-Slow-by-Daniel-Kahneman/9780141033570&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Thinking Fast and Slow&lt;/a&gt; (Daniel Kahneman) on the pitfalls of our intuitive reasoning, especially about risk and uncertainty.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blackwells.co.uk/bookshop/product/Mistakes-Were-Made-But-Not-by-Me-by-Carol-Tavris-Elliot-Aronson/9780544574786&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mistakes were made, but not by me&lt;/a&gt; (Carol Tarvis and Elliot Aronson) on the psychology of sticking with bad decisions.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://poets.org/poem/parable-old-man-and-young&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Parable of the Old Man and the Young&lt;/a&gt; by Wilfred Owen, on consequences of the above.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blackwells.co.uk/bookshop/product/Economics-by-Ha-Joon-Chang-author/9780718197032&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Economics The User&amp;rsquo;s Guide&lt;/a&gt; (Ha-Joon Chang) on what you really need to know about economics, and how it isn&amp;rsquo;t just a scaled up version of household accounting.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blackwells.co.uk/bookshop/product/The-Great-Crash-1929-by-John-Kenneth-Galbraith/9780141038254&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Great Crash 1929&lt;/a&gt; (Galbraith) a delightful disection of economic hubris (and the need for stabilizing controls that we long since did away with).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blackwells.co.uk/bookshop/product/The-Rise-and-Fall-of-the-Third-Reich-by-William-L-Shirer-author/9781451651683&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Rise and Fall of the Third Reich&lt;/a&gt; (William Shirer) detailing exactly how things went wrong in Germany after the Great Depression.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blackwells.co.uk/bookshop/product/Witch-Hunting-in-Scotland-by-Brian-P-Levack/9780415399432&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Witch hunting in Scotland&lt;/a&gt; (Brian Levack) on the Scottish experience of the great European witchcraft panic (James I/VI wrote a treatise on Witchcraft).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://people.maths.bris.ac.uk/~sw15190/WT99.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wood and Thomas paper&lt;/a&gt; on the problems of prediction with disease models in the absense of direct validation data (the least impressive item here).&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tencent&#39;s Strategy for the ACG and the Impact on Japan</title>
      <link>https://yumaloop.github.io/post/2020-06-10-tencent-acg/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://yumaloop.github.io/post/2020-06-10-tencent-acg/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iZYT.usmZYtc/v0/740x-1.jpg&#34; alt=&#34;img000&#34; title=&#34;img000&#34;&gt;&lt;/p&gt;
&lt;p&gt;中国のTencentが日本のACG(Anime, Comics, Game)産業へ大きな関心を寄せているらしい．
すなわち，コンソールゲームの制作とヒットシリーズのフランチャイズに関する日本の専門知識を吸収しながら，
いくつかのスタジオを買収し，潜在的な投資について交渉中とのこと．詳細は下記記事を参照．&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bloomberg.com/amp/news/articles/2020-06-09/tencent-targets-japan-anime-manga-to-jump-start-global-growth&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tencent Targets Japan Anime, Manga to Jump-Start Global Growth (Bloomberg, June 9, 2020, 5:00 PM EDT)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time-steady States on Systems</title>
      <link>https://yumaloop.github.io/post/2020-04-24-time-steady-state-on-system/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://yumaloop.github.io/post/2020-04-24-time-steady-state-on-system/</guid>
      <description>&lt;h3 id=&#34;システムと定常状態&#34;&gt;システムと定常状態&lt;/h3&gt;
&lt;p&gt;多くの動的モデル（Dynamic Model-System）は，定常状態（time-steady state）に至ることを目的として設計される．ここで，定常状態とは，「ある変数$X$に作用する，何らかの時変量（parameter $\theta_t$）や関数$L_t(x; \theta)$）が一定値に収束すること」と定義しておく．&lt;/p&gt;
&lt;p&gt;そして，着目している動的モデルが定常状態に至るプロセスは，システム同定（System identification）と呼ばれ，定常状態を示した概念として，均衡（equilibrium）や平衡（balance）と呼ばれる用語が使われる．&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%8c%96%e5%ad%a6%e5%8f%8d%e5%bf%9c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;化学反応&lt;/a&gt;においては、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%8f%af%e9%80%86%e5%8f%8d%e5%bf%9c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;可逆反応&lt;/a&gt;の生成物の変化量と出発物質の変化量が合致した状態を指す。&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%8c%96%e5%ad%a6%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;化学平衡&lt;/a&gt;を参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%8a%9b%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;力学&lt;/a&gt;においては、物体に加わっている全ての&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%8a%9b_%28%e7%89%a9%e7%90%86%e5%ad%a6%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;力&lt;/a&gt;の合力と&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%8a%9b%e3%81%ae%e3%83%a2%e3%83%bc%e3%83%a1%e3%83%b3%e3%83%88&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;力のモーメント&lt;/a&gt;の和がともに 0 である状態を平衡と呼ぶ。&lt;a href=&#34;https://ja.wikipedia.org/w/index.php?title=%e5%8a%9b%e5%ad%a6%e7%9a%84%e5%b9%b3%e8%a1%a1&amp;amp;action=edit&amp;amp;redlink=1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;力学的平衡&lt;/a&gt;（&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e8%8b%b1%e8%aa%9e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;英語&lt;/a&gt;: &lt;a href=&#34;https://en.wikipedia.org/wiki/Mechanical_equilibrium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mechanical equilibrium&lt;/a&gt;）を参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%86%b1%e5%8a%9b%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;熱力学&lt;/a&gt;においては通常、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%86%b1%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;熱平衡&lt;/a&gt;、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%86%b1%e5%8a%9b%e5%ad%a6%e7%9a%84%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;力学的平衡&lt;/a&gt;、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%8c%96%e5%ad%a6%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;化学平衡&lt;/a&gt;の三つを合わせて、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%86%b1%e5%8a%9b%e5%ad%a6%e7%9a%84%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;熱力学的平衡&lt;/a&gt;とよぶ。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%b5%b1%e8%a8%88%e5%8a%9b%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;統計力学&lt;/a&gt;においては、系のエネルギー分布が、ボルツマン分布に従うことである。&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%86%b1%e5%8a%9b%e5%ad%a6%e7%9a%84%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;熱力学的平衡&lt;/a&gt;を参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%89%a9%e7%90%86%e5%8c%96%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;物理化学&lt;/a&gt;においては、複数の物質相から構成される系において、相間の物質の出入りが合い等しい状態を指す。&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%9b%b8%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;相平衡&lt;/a&gt;を参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e9%9b%bb%e6%b0%97%e5%b7%a5%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;電気工学&lt;/a&gt;においては、信号源と負荷の間のインピーダンスが合致していることを指す。&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e3%82%a4%e3%83%b3%e3%83%94%e3%83%bc%e3%83%80%e3%83%b3%e3%82%b9%e5%b9%b3%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;インピーダンス平衡&lt;/a&gt;を参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e9%9b%bb%e6%b0%97%e5%9b%9e%e8%b7%af&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;電気回路&lt;/a&gt;においては、信号回路の双方が接地点に接続されていないことを指す。&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%b9%b3%e8%a1%a1%e6%8e%a5%e7%b6%9a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;平衡接続&lt;/a&gt;を参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e6%83%85%e5%a0%b1%e5%b7%a5%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;情報工学&lt;/a&gt;においては、データ&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e6%9c%a8%e6%a7%8b%e9%80%a0_%28%e3%83%87%e3%83%bc%e3%82%bf%e6%a7%8b%e9%80%a0%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;木構造&lt;/a&gt;の任意の節においてその配下の節点の数が等しい状態を指す。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%94%9f%e6%85%8b%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;生態学&lt;/a&gt;においては、生物群集間の分布と個体数の変化が無い状態を指す。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%94%9f%e7%90%86%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;生理学&lt;/a&gt;においては、水平であることを認知することを指す。&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%b9%b3%e8%a1%a1%e6%84%9f%e8%a6%9a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;平衡感覚&lt;/a&gt;を参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e7%b5%8c%e6%b8%88%e5%ad%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;経済学&lt;/a&gt;においては、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e9%9c%80%e8%a6%81%e3%81%a8%e4%be%9b%e7%b5%a6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;需要と供給&lt;/a&gt;が釣り合って&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e4%be%a1%e6%a0%bc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;価格&lt;/a&gt;が不動になることなどを指す。&lt;a href=&#34;https://ja.wikipedia.org/wiki/%e5%9d%87%e8%a1%a1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;均衡&lt;/a&gt;を参照。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;連立(微分)方程式で記述できるため．&lt;/p&gt;
&lt;h3 id=&#34;なぜ線形モデルが有用なのか&#34;&gt;なぜ線形モデルが有用なのか？&lt;/h3&gt;
&lt;p&gt;答えはシンプルで，Taylor展開&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
\frac{d x_1}{d t} &amp;amp;= f_1(x_1, \dots, x_n; \theta_1) \\&lt;br&gt;
\frac{d x_2}{d t} &amp;amp;= f_2(x_1, \dots, x_n; \theta_1) \\&lt;br&gt;
&amp;amp;\vdots \\&lt;br&gt;
\frac{d x_n}{d t} &amp;amp;= f_n(x_1, \dots, x_n; \theta_1)
\end{align}
$$&lt;/p&gt;
&lt;p&gt;このモデルが，定常状態にいる場合，&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
f_1 = f_2 = \cdots = f_n = 0
\end{align}
$$&lt;/p&gt;
&lt;p&gt;が成り立つから，$n$個の変数${\bf x} = (x_1, x_2, \dots, x_n)$に対して，$n$個の方程式が得られる．この解がシステムの定常化となる．これを${\bf x}^* = (x_1^*, x_2^*, \dots, x_n^*)$とおくと，$f_1, f_2, \dots, f_n$に対して，点${\bf x}^*$の近傍でTaylor展開が可能になる．&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
\frac{d x_1}{d t}
= f_1(x_1, \dots, x_n; \theta_1)
=&amp;amp; a_{11}(x_1 - x_1^*) + a_{12} {(x_2 - x_2^*)} + \cdots a_{1n} {(x_n - x_n^*)} + \\&lt;br&gt;
&amp;amp; a_{111}{(x_1 - x_1^*)}^2 + a_{112}(x_1 - x_1^*)(x_2 - x_2^*) + \cdots + a_{11n}{(x_1 - x_1^*)}^2 + \\&lt;br&gt;
&amp;amp; ~~ \vdots \\&lt;br&gt;
&amp;amp; a_{11\cdots1}{(x_1 - x_1^*)}^n + \cdots \\&lt;br&gt;
\frac{d x_2}{d t}
= f_2(x_1, \dots, x_n; \theta_1)
=&amp;amp; a_{21}(x_1 - x_1^*) + a_{22} {(x_2 - x_2^*)} + \cdots a_{2n} {(x_n - x_n^*)} + \\&lt;br&gt;
&amp;amp; a_{211}{(x_1 - x_1^*)}^2 + a_{212}(x_1 - x_1^*)(x_2 - x_2^*) + \cdots + a_{21n}{(x_1 - x_1^*)}^2 + \\&lt;br&gt;
&amp;amp; ~~ \vdots \\&lt;br&gt;
&amp;amp; a_{21\cdots1}{(x_1 - x_1^*)}^n + \cdots \\ \\&lt;br&gt;
&amp;amp; ~~ \vdots \\ \\&lt;br&gt;
\frac{d x_n}{d t}
= f_n(x_1, \dots, x_n; \theta_1)
=&amp;amp; a_{n1}(x_1 - x_1^*) + a_{n2} {(x_2 - x_2^*)} + \cdots a_{nn} {(x_n - x_n^*)} + \\&lt;br&gt;
&amp;amp; a_{n11}{(x_1 - x_1^*)}^2 + a_{n12}(x_1 - x_1^*)(x_2 - x_2^*) + \cdots + a_{n1n}{(x_1 - x_1^*)}^2 + \\&lt;br&gt;
&amp;amp; ~~ \vdots \\&lt;br&gt;
&amp;amp; a_{n1\cdots1}{(x_1 - x_1^*)}^n + \cdots \\&lt;br&gt;
\end{align}
$$&lt;/p&gt;
&lt;p&gt;つまり，任意の微分可能関数$f_1, f_2, \dots, f_n$によって表現されたダイナミクスをもつ動的モデルは，（定常解の近傍では）任意のn次多項式によって近似できる．これにより，線形システムの妥当性が保証される．一般解は，&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
x_1
=&amp;amp; ~ x_1^*  + C_{11}e^{\lambda_1 t} + C_{12}e^{\lambda_2 t} + \cdots C_{1n}e^{\lambda_n t} + \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ C_{111}e^{2\lambda_1 t} + C_{112}e^{2\lambda_2 t} + \cdots + C_{11n}e^{2\lambda_n t} + \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ ~~ \vdots \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ C_{11\cdots1}e^{n\lambda_1 t} + C_{11\cdots2}e^{n\lambda_2 t} + \cdots + C_{11\cdots n}e^{n\lambda_n t} \\&lt;br&gt;
x_2
=&amp;amp; ~ x_2^*  + C_{21}e^{\lambda_1 t} + C_{22}e^{\lambda_2 t} + \cdots C_{2n}e^{\lambda_n t} + \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ C_{211}e^{2\lambda_1 t} + C_{212}e^{2\lambda_2 t} + \cdots + C_{11n}e^{2\lambda_n t} + \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ ~~ \vdots \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ C_{21\cdots1}e^{n\lambda_1 t} + C_{21\cdots2}e^{n\lambda_2 t} + \cdots + C_{21\cdots n}e^{n\lambda_n t} \\ \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ ~~ \vdots
\ \&lt;br&gt;
x_n
=&amp;amp; ~ x_n^*  + C_{n1}e^{\lambda_1 t} + C_{n2}e^{\lambda_2 t} + \cdots C_{nn}e^{\lambda_n t} + \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ C_{n11}e^{2\lambda_1 t} + C_{n12}e^{2\lambda_2 t} + \cdots + C_{n1n}e^{2\lambda_n t} + \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ ~~ \vdots \\&lt;br&gt;
&amp;amp; ~~~~~~~~~~ C_{n1\cdots1}e^{n\lambda_1 t} + C_{n1\cdots2}e^{n\lambda_2 t} + \cdots + C_{n1\cdots n}e^{n\lambda_n t} \\&lt;br&gt;
\end{align}
$$&lt;/p&gt;
&lt;p&gt;となる．&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;モデルとは何か&#34;&gt;モデルとは何か？&lt;/h3&gt;
&lt;p&gt;つまり，多くの分野において数理モデルとか計量モデルとか呼ばれるものは，以下の手続きを必要とする．&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定常状態に至ることを目的とする&lt;strong&gt;動的モデル&lt;/strong&gt;を定義する&lt;/li&gt;
&lt;li&gt;モデルの状態変化を&lt;strong&gt;最適化問題(過程&lt;/strong&gt;)として定式化する．&lt;/li&gt;
&lt;li&gt;定常状態への収束が保証された&lt;strong&gt;最適化アルゴリズム&lt;/strong&gt;を考える&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h3 id=&#34;移動平均&#34;&gt;移動平均&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;カルマンフィルタ&lt;/li&gt;
&lt;li&gt;Adamに置けるモメンタム&lt;/li&gt;
&lt;li&gt;強化学習の報酬&lt;/li&gt;
&lt;li&gt;ゲーム理論におけるFicticious Play&lt;/li&gt;
&lt;li&gt;株価におけるテクニカル分析移動平均（ARMA）&lt;/li&gt;
&lt;li&gt;(金融工学)バリュエーションにおけるDCF法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;移動平均とは何か？&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
m_t &amp;amp;= \gamma \cdot m_t − 1+η \cdot \frac{\partial L(w_t)}{\partial w} \\&lt;br&gt;
w_{t+1} &amp;amp;= w_t - m_t
\end{align}
$$&lt;/p&gt;
&lt;p&gt;$$
m_t = g_t + \gamma \cdot g_{t-1} + \gamma^2 \cdot g_{t-2} \cdots + \gamma^t \cdot g_{0}
$$&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Whiteside&#39;s Outline Method</title>
      <link>https://yumaloop.github.io/post/2019-11-25-whitesides_outline_method/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://yumaloop.github.io/post/2019-11-25-whitesides_outline_method/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gmwgroup.harvard.edu/people/george-m-whitesides&#34;&gt;Prof. George M. Whitesides&lt;/a&gt; is a top-level researcher on chemistry and also known as one of the highest h-index researchers in the world. He explains his unique writing techniques called Outline Method in the article, &lt;a href=&#34;https://www.tulane.edu/~lamp/whiteside.pdf&#34;&gt;&amp;ldquo;Whitesides&#39; Group: Writing a Paper&amp;rdquo;&lt;/a&gt;. I&amp;rsquo;ve translated that into Japanese and publish it here.&lt;/p&gt;
&lt;h2 id=&#34;original-paper&#34;&gt;Original paper&lt;/h2&gt;
&lt;object data=&#34;https://www.tulane.edu/~lamp/whiteside.pdf&#34; type=&#34;application/pdf&#34; width=&#34;100%&#34; height=&#34;800px&#34;&gt;
    &lt;embed src=&#34;https://www.tulane.edu/~lamp/whiteside.pdf&#34;&gt;
        &lt;p&gt;This browser does not support PDFs. Please download the PDF to view it: &lt;a href=&#34;https://www.tulane.edu/~lamp/whiteside.pdf&#34;&gt;Download PDF&lt;/a&gt;.&lt;/p&gt;
    &lt;/embed&gt;
&lt;/object&gt;
&lt;br&gt;
&lt;h2 id=&#34;japanese--translation&#34;&gt;Japanese  translation&lt;/h2&gt;
&lt;object data=&#34;{{ site.baseurl }}/assets/pdf/whiteside_outline_method_jp.pdf&#34; type=&#34;application/pdf&#34; width=&#34;100%&#34; height=&#34;800px&#34;&gt;
    &lt;embed src=&#34;{{ site.baseurl }}/assets/pdf/whiteside_outline_method_jp.pdf&#34;&gt;
        &lt;p&gt;This browser does not support PDFs. Please download the PDF to view it: &lt;a href=&#34;{{ site.baseurl }}/assets/pdf/whiteside_outline_method_jp.pdf&#34;&gt;Download PDF&lt;/a&gt;.&lt;/p&gt;
    &lt;/embed&gt;
&lt;/object&gt;
</description>
    </item>
    
    <item>
      <title>Automatically Login to keio.jp using Selenium on Python</title>
      <link>https://yumaloop.github.io/post/2019-06-21-keiojp-auto-login/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://yumaloop.github.io/post/2019-06-21-keiojp-auto-login/</guid>
      <description>&lt;p&gt;Have you ever want to login to keio.jp automatically? Don&amp;rsquo;t you think it is cool? At least I think so and I write down the way to achieve that with Python.&lt;/p&gt;
&lt;br&gt;
&lt;div style=&#34;text-align:center&#34;&gt;
  &lt;video style=&#34;width: 100%;&#34; controls autoplay loop muted&gt;
    &lt;source src=&#34;{{ &#34;/assets/video/keio_login.mp4&#34; | relative_url }}&#34; type=&#34;video/mp4&#34;&gt;
    &lt;p&gt;Your browser does not support the video tag.&lt;/p&gt;
  &lt;/video&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;In order to login to keio.jp (Keio Single Sign-On System), it is necessary to satisfy the page transition as below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://auth.keio.jp&#34;&gt;https://auth.keio.jp&lt;/a&gt; (SSO login page)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gslbs.adst.keio.ac.jp/student/index.html&#34;&gt;https://gslbs.adst.keio.ac.jp/student/index.html&lt;/a&gt; (Syllabus page)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.edu.keio.jp/ess2/login?&#34;&gt;https://www.edu.keio.jp/ess2/login?&lt;/a&gt; (Class support page)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, this time, a static web-scraping library like BeautifulSoup is not enough, because it doesn&amp;rsquo;t support the dynamic site with Javascript or page redirection. Then I use &lt;a href=&#34;https://selenium.dev/documentation/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Selenium&lt;/a&gt; and &lt;a href=&#34;http://chromedriver.chromium.org/getting-started&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ChromeDriver&lt;/a&gt; in python.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;example-1--auto-login-to-keiojp&#34;&gt;Example 1 : Auto login to keio.jp&lt;/h4&gt;
&lt;p&gt;If you are the student in Keio University, you can login to keio.jp automatically. All you need is to assign your email address and password in the below script and run it in command line.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException

ID = &amp;quot;*****&amp;quot; # your email in keio.jp (ex. example@keio.jp)  #
PW = &amp;quot;*****&amp;quot; # your password in keio.jp #

# Optional settings of chrome driver
options = webdriver.ChromeOptions()
options.add_argument(&#39;--headless&#39;)

# Boot chrome driver
driver = webdriver.Chrome(&amp;quot;/usr/local/bin/chromedriver&amp;quot;, options=options)
driver.set_page_load_timeout(15) # Time out 15 sec

# GET (HTML Page)
driver.get(&amp;quot;https://auth.keio.jp&amp;quot;)

# Find elements and POST (send keys to the input tag)
id_element = driver.find_element_by_name(&amp;quot;j_username&amp;quot;)
id_element.send_keys(ID)
pw_element = driver.find_element_by_name(&amp;quot;j_password&amp;quot;)
pw_element.send_keys(PW)

# Click login button
login_button = driver.find_element_by_name(&amp;quot;_eventId_proceed&amp;quot;)
login_button.click()

# GET (HTML Page)
driver.get(&amp;quot;https://gslbs.adst.keio.ac.jp/student/index.html&amp;quot;)

# GET (HTML Page)
driver.get(&amp;quot;https://www.edu.keio.jp/ess2/login?&amp;quot;)

# Close chrome driver
driver.quit()
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h4 id=&#34;example-2--auto-login-to-twittercom&#34;&gt;Example 2 : Auto login to twitter.com&lt;/h4&gt;
&lt;p&gt;If you have twitter account, you can also login to twitter.com automatically. All you need is to assign your username (@********) and password (********) in the below script and run it in command line.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException

USERNAME=&amp;quot;*****&amp;quot; # your username in twitter #
PASSWORD=&amp;quot;*****&amp;quot; # your password in twitter #

# Optional settings of chrome driver
options = webdriver.ChromeOptions()
options.add_argument(&#39;--headless&#39;)

# Boot chrome driver
driver = webdriver.Chrome(&amp;quot;/usr/local/bin/chromedriver&amp;quot;, options=options)
driver.set_page_load_timeout(15) # Time out 15 sec

# GET (HTML Page)
driver.get(&amp;quot;https://twitter.com/login&amp;quot;)

# Find elements and POST (send keys to the input tag)
username_element = driver.find_element_by_class_name(&#39;js-username-field&#39;)
username_element.send_keys(USERNAME)
password_element = driver.find_element_by_class_name(&#39;js-password-field&#39;)
password_element.send_keys(PASSWORD)

# Click login button
login_button = driver.find_element_by_css_selector(&#39;button.submit.EdgeButton.EdgeButton--primary.EdgeButtom--medium&#39;)
login_button.click()

# Close chrome driver
driver.quit()
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h4 id=&#34;example-3--auto-search-in-googlecom&#34;&gt;Example 3 : Auto search in google.com&lt;/h4&gt;
&lt;p&gt;If you refer to Selenium Getting started guide, you can aquire the search result with the keyword &amp;ldquo;cheese&amp;rdquo; at google.com with Selenium on Python. (This requires Selenium WebDriver 3.13 or newer.)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support.expected_conditions import presence_of_element_located

# Open web driver (Google Chrome)
driver = webdriver.Firefox()

wait = WebDriverWait(driver, 10) 

# GET HTML page source of google.com
driver.get(&amp;quot;https://google.com/ncr&amp;quot;) # GET 
# POST the keyword &amp;quot;cheese&amp;quot; in &amp;quot;q&amp;quot; element in google.com
driver.find_element_by_name(&amp;quot;q&amp;quot;).send_keys(&amp;quot;cheese&amp;quot; + Keys.RETURN) # POST 

first_result = wait.until(presence_of_element_located((By.CSS_SELECTOR, &amp;quot;h3&amp;gt;div&amp;quot;)))

# Search result as text
print(first_result.get_attribute(&amp;quot;textContent&amp;quot;))

# Close web driver (Google Chrome)
driver.quit()
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Selenium Browser Automation Project &amp;gt; Getting started &amp;gt; Quick tour&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://selenium.dev/documentation/en/getting_started/quick/#webdriver&#34;&gt;https://selenium.dev/documentation/en/getting_started/quick/#webdriver&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
